# BMC configuration

cpa.predicate.blk.alwaysAtFunctions = false
cpa.predicate.blk.alwaysAtLoops     = false
cpa.predicate.predmap.export = false
cpa.predicate.invariants.export = false
cpa.predicate.invariants.exportAsPrecision = false
cpa.automaton.breakOnTargetState = 0
cpa.value.merge = JOIN
analysis.traversal.order = bfs
analysis.traversal.useReversePostorder = true
analysis.traversal.useCallstack = true
analysis.traversal.useReverseLoopstack = true
analysis.traversal.useReverseLoopIterationCount = true
cpa.predicate.blk.useCache = true
f.write("cpa.smg.enableMallocFail = false\n")
f.write("cpa.smg.handleUnknownFunctions = assume_safe\n")
analysis.algorithm.BMC = true
cpa.loopbound.maxLoopIterations = 5

cpa = cpa.arg.ARGCPA
ARGCPA.cpa = cpa.composite.CompositeCPA
CompositeCPA.cpas = cpa.location.LocationCPA, cpa.callstack.CallstackCPA, cpa.functionpointer.FunctionPointerCPA, cpa.predicate.PredicateCPA, cpa.smg.SMGCPA, cpa.assumptions.storage.AssumptionStorageCPA, cpa.loopbound.LoopBoundCPA, cpa.value.ValueAnalysisCPA

specification = specification/default.spc

